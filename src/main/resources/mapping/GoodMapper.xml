<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxx.dao.GoodMapper">
    <resultMap id="BaseResultMap" type="com.jxx.entity.Good">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="pic_url" jdbcType="VARCHAR" property="picUrl"/>
        <result column="details" jdbcType="VARCHAR" property="details"/>
        <result column="amount" jdbcType="INTEGER" property="amount"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, price, pic_url, details, amount
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods
        where name like concat('%',#{key,jdbcType=VARCHAR},'%')
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from goods
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.jxx.entity.Good" useGeneratedKeys="true" keyProperty="id">
        insert into goods (id, name, price,
                           pic_url, details, amount)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL},
                #{picUrl,jdbcType=VARCHAR}, #{details,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.jxx.entity.Good" useGeneratedKeys="true" keyProperty="id">
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="picUrl != null">
                pic_url,
            </if>
            <if test="details != null">
                details,
            </if>
            <if test="amount != null">
                amount,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="picUrl != null">
                #{picUrl,jdbcType=VARCHAR},
            </if>
            <if test="details != null">
                #{details,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jxx.entity.Good">
        update goods
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="picUrl != null">
                pic_url = #{picUrl,jdbcType=VARCHAR},
            </if>
            <if test="details != null">
                details = #{details,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jxx.entity.Good">
        update goods
        set name    = #{name,jdbcType=VARCHAR},
            price   = #{price,jdbcType=DECIMAL},
            pic_url = #{picUrl,jdbcType=VARCHAR},
            details = #{details,jdbcType=VARCHAR},
            amount  = #{amount,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>